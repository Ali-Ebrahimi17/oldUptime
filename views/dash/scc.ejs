<% layout('layouts/boilerplate')%>

<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<!-- <meta http-equiv="refresh" content="900"> -->

		<link rel="stylesheet" href="/7z/content/chart-js/chart.min.css" type="text/css" />
		<script src="/7z/content/chart-js/chartjs-plugin-labels.min.js"></script>
		<script src="/7z/content/chart-js/chart.bundle.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.7.0"></script>

		<link rel="icon" href="/images/jcb.png" />
		<link rel="stylesheet" href="/stylesheets/bootstrap.css" />
		<link rel="stylesheet" href="/stylesheets/scc.css" />
	</head>

	<body>
		<% let today = new Date() %> <% let day = today.getDate() %> <% let month = today.getMonth() + 1 %> <% let year = today.getFullYear() %> <% let
		hours = today.getHours() %> <% let minutes = today.getMinutes() %> <% if (day < 10) day = '0' + day %> <% if (month < 10) month = '0' + month %>
		<% if (hours < 10) hours = '0' + hours %> <% if (minutes < 10) minutes = '0' + minutes %> <% let dateTime = day + ' ' + month + ' ' + year + ' - '
		+ hours + ':' + minutes %>

		<!-- Get the prediction months -->
		<% let prediction1Month = moment().subtract(4, 'months').format('MMM-YY').toUpperCase()%> <% let prediction2Month = moment().subtract(3,
		'months').format('MMM-YY').toUpperCase()%> <% let prediction3Month = moment().subtract(2, 'months').format('MMM-YY').toUpperCase()%>

		<!-- The dash layout -->
		<div class="dash-title">
			<div>
				<h3>UK Group DOA Open Contained Closed by Intake Week</h3>
			</div>
		</div>
		<section class="dash-layout">
			<div class="card card-group">
				<canvas id="myChartGroup"></canvas>
			</div>

			<div class="card card-division">
				<p class="box-content-header">BHL</p>
				<canvas id="myChartBHL"></canvas>
			</div>
			<div class="card card-division">
				<p class="box-content-header">CP</p>
			</div>
			<div class="card card-division">
				<p class="box-content-header">EM & LP</p>
			</div>
			<div class="card card-division">
				<p class="box-content-header">HP</p>
			</div>
			<div class="card card-division">
				<p class="box-content-header">LDL</p>
			</div>
			<div class="card card-division">
				<p class="box-content-header">SD</p>
			</div>
		</section>

		<script>
			Chart.defaults.global.defaultFontColor = "#fff";
			Chart.defaults.global.defaultFontSize = 12;

			var ctx = document.getElementById("myChartGroup").getContext('2d');
			var myChart = new Chart(ctx, {
			  type: 'bar',
			  data: {
			    labels: [
			      <%- JSON.stringify(sixWeeksAgo); %>,
			      <%- JSON.stringify(fiveWeeksAgo); %>,
			      <%- JSON.stringify(fourWeeksAgo); %>,
			      <%- JSON.stringify(threeWeeksAgo); %>,
			      <%- JSON.stringify(twoWeeksAgo); %>,
			      <%- JSON.stringify(lastWeek); %>,
			      <%- JSON.stringify(thisWeek); %>,

			    ],
			    datasets: [{
			        label: "Avg Days to Closed",
			        type: "line",
			        borderColor: "blue",
			        data: [

			          15,
			          16,
			          17,
			          16,
			          25,
			          6,
			          6,

			        ],
			        // fill: false
			      },

			      {
			        label: 'Closed',
			        backgroundColor: "green",
			        data: [12, 15, 25, 30, 8, 4, 2, 3, 6],
			      }, {
			        label: 'Contained',
			        backgroundColor: "orange",
			        data: [8, 10, 12, 18, 20, 4, 8, 3, 2],
			      }, {
			        label: 'Open',
			        backgroundColor: "red",
			        data: [1, 3, 5, 8, 12, 12, 20, 18, 16],
			      },

			    ],
			  },
			  options: {
			    tooltips: {
			      displayColors: true,
			      callbacks: {
			        mode: 'x',
			      },
			    },
			    scales: {
			      xAxes: [{
			        stacked: true,
			        gridLines: {
			          display: false,
			        }
			      }],
			      yAxes: [{
			        stacked: true,
			        ticks: {
			          beginAtZero: true,
			        },
			        type: 'linear',
			      }]
			    },
			    responsive: true,
			    maintainAspectRatio: false,
			    legend: {
			      position: 'top'
			    },
			  }
			});
			var ctx = document.getElementById("myChartBHL").getContext('2d');
			var myChart = new Chart(ctx, {
			  type: 'bar',
			  data: {
			    labels: [
			      <%- JSON.stringify(sixWeeksAgo); %>,
			      <%- JSON.stringify(fiveWeeksAgo); %>,
			      <%- JSON.stringify(fourWeeksAgo); %>,
			      <%- JSON.stringify(threeWeeksAgo); %>,
			      <%- JSON.stringify(twoWeeksAgo); %>,
			      <%- JSON.stringify(lastWeek); %>,
			      <%- JSON.stringify(thisWeek); %>,

			    ],
			    datasets: [{
			        label: "Avg Days to Closed",
			        type: "line",
			        borderColor: "blue",
			        data: [

			          15,
			          16,
			          17,
			          16,
			          25,
			          6,
			          6,

			        ],
			        // fill: false
			      },

			      {
			        label: 'Closed',
			        backgroundColor: "green",
			        data: [12, 15, 25, 30, 8, 4, 2, 3, 6],
			      }, {
			        label: 'Contained',
			        backgroundColor: "orange",
			        data: [8, 10, 12, 18, 20, 4, 8, 3, 2],
			      }, {
			        label: 'Open',
			        backgroundColor: "red",
			        data: [1, 3, 5, 8, 12, 12, 20, 18, 16],
			      },

			    ],
			  },
			  options: {
			    tooltips: {
			      displayColors: true,
			      callbacks: {
			        mode: 'x',
			      },
			    },
			    scales: {
			      xAxes: [{
			        stacked: true,
			        gridLines: {
			          display: false,
			        }
			      }],
			      yAxes: [{
			        stacked: true,
			        ticks: {
			          beginAtZero: true,
			        },
			        type: 'linear',
			      }]
			    },
			    responsive: true,
			    maintainAspectRatio: false,
			    legend: {
			      display: 'top'
			    },
			  }
			});
		</script>
	</body>
</html>
